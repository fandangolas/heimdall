[tool.poetry]
name = "heimdall"
version = "0.1.0"
description = "High-performance distributed authentication and authorization system"
authors = ["Heimdall Team <team@heimdall.dev>"]
readme = "README.md"
packages = [{include = "heimdall", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
pydantic = {extras = ["email"], version = "^2.11.7"}
pydantic-settings = "^2.10.1"
asyncpg = "^0.30.0"
redis = "^6.4.0"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.20"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
pytest-xdist = "^3.6.1"
pytest-html = "^4.1.1"
black = "^25.1.0"
ruff = "^0.12.11"
mypy = "^1.17.1"
httpx = "^0.28.1"
faker = "^37.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "S", "UP", "C4", "PT", "RUF", "PLW"]
ignore = [
    "N802",  # Factory functions (LoginRequest, etc.) intentionally capitalized
    "S104",  # Binding to 0.0.0.0 is intentional for containerized apps
    "S106",  # Hardcoded password detection false positive for "bearer" string
    "S107",  # Hardcoded password detection false positive for "bearer" token type
    "B008",  # FastAPI Depends() in function defaults is correct pattern
    "B904",  # Exception chaining in HTTP exception handlers is optional
    "PLW0603",  # Global statement needed for mock setup in dependencies
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert statements in tests

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["src/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "-v",
    "--tb=short",
    "--strict-config",
    "--strict-markers",
]
markers = [
    "unit: Unit tests (fast, no external dependencies)",
    "integration: Integration tests (with mocks)", 
    "postgres: PostgreSQL integration tests (require database)",
    "slow: Slow tests that take more than a few seconds",
    "performance: Performance benchmarking tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]